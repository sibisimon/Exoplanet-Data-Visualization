# Array for holding the BIC valueas of different group
bic_arr = c()
# Looping to find BIC of different groups
for (i in 1:10){
fit <- blca.em(divisions, i, restarts = 35)
bic_arr[i] = fit$BIC
}
# BIC plot for different groups
plot(1:10, bic_arr, xlabel="Number ")
# Fitting the Model the group = 4
fit <- blca.em(divisions, 4, restarts = 35)
bic_arr
# Fitting the Model the group = 6
fit <- blca.em(divisions, 6, restarts = 35)
plot(fit)
library(BayesLCA)
set.seed(18201381)
plot(1:10, bic_arr, main = "BIC VS GROUP")
str(data)
# Q1
data = read_csv("exo_data.csv")
library(readr)
# Q1
data = read_csv("exo_data.csv")
time_series_data
time_series_data = exoplanet_cmplt_data %>% group_by(meth, year) %>% summarise(Freq=n()) %>% na.omit()
time_series_data = exoplanet_cmplt_data %>% group_by(meth, year) %>% summarise(Freq=n()) %>% na.omit()
source('D:/Study/R/AdvancedR/Project/18201381_project.R', echo=TRUE)
setwd("D:\Study\R\AdvancedR\Project")
setwd("D:/Study/R/AdvancedR/Project")
source('D:/Study/R/AdvancedR/Project/18201381_project.R', echo=TRUE)
time_series_data
View(time_series_data)
time_series_data %>% group_by(meth) %>% mutate(cum_freq = cumsum(Freq))
time_series_data <- time_series_data %>% group_by(meth) %>% mutate(cum_freq = cumsum(Freq))
View(time_series_data)
time_series_data <- time_series_data %>% group_by(meth) %>% mutate(cum_freq = cumsum(Freq))
ggplot(
time_series_data,
aes(year, cum_freq, color=meth)) +
geom_line(size=1.5) +
labs(title = 'Times Series Plot for exoplanet discoverd', x = 'Year', y = 'Frequency of exoplanet discovered') +
transition_reveal(year) +
theme_bw()
ggplot(
time_series_data,
aes(year, cum_freq, color=meth)) +
geom_line(size=1.5) +
labs(title = 'Times series plot for exoplanet discoverd', x = 'Year', y = 'Frequency of exoplanet discovered till year') +
transition_reveal(year) +
theme_bw()
library(rstan)
install.packages("rstan")
library(rstan)
# dataset
library(boot)
motor$times
shiny::runApp('exoplanet_shiny')
motor$times
scale(motor$times)
scale(motor$times)[1,]
scale(motor$times)[,1]
model_data = exoplanet_cmplt_data  %>%  select(period, host_mass, host_temp) %>% na.omit()
model_data
View(model_data)
model_data
model_data %>% select(host_mass, host_temp) . as.matrix()
model_data %>% select(host_mass, host_temp) %>% as.matrix()
model_data %>% select(scale(host_mass), scale(host_temp)) %>% as.matrix()
model_datat_temp)) %>% as.matrix()
x <-model_data %>% select(host_mass, host_temp) %>% as.matrix()
model_data %>% select(scale(host_mass), scale(host_temp)) %>% as.matrix()
x
exoplanet_data_lr = list(N = nrow(model_data),
K = 2,
x = x,
y = scale(log(exoplanet_cmplt_data$peroid)[,1]))
exoplanet_data_lr = list(N = nrow(model_data),
K = 2,
x = x,
y = scale(log(exoplanet_cmplt_data$period)[,1]))
exoplanet_data_lr = list(N = nrow(model_data),
K = 2,
x = x,
y = scale(log(exoplanet_cmplt_data$period))[,1])
# Maximum likelihood version
stan_model_lr = stan_model('lin_reg.stan')
stan_run_lr_ml = optimizing(stan_model_lr, data = exoplanet_data_lr)
model_data
View(model_data)
x
x.is_na()
model_data.is_na()
scale(log(exoplanet_cmplt_data$period))[,1]
stan_model_lr
stan_run_lr_ml = optimizing(stan_model_lr, data = exoplanet_data_lr)
exoplanet_data_lr = list(N = nrow(model_data),
K = 2,
x = x,
y = scale(log(model_data$period))[,1])
stan_run_lr_ml = optimizing(stan_model_lr, data = exoplanet_data_lr)
print(stan_run_lr_ml)
model_data <- exoplanet_cmplt_data  %>%  select(period, host_mass, host_temp) %>% na.omit()
# model_data$host_mass <- scale(model_data$host_mass)[,1]
# model_data$host_temp <- scale(model_data$host_temp)[,1]
x <-model_data %>% select(host_mass, host_temp) %>% as.matrix()
exoplanet_data_lr = list(N = nrow(model_data),
K = 2,
x = x,
y = scale(log(model_data$period))[,1])
stan_run_lr_ml = optimizing(stan_model_lr, data = exoplanet_data_lr)
model_data <- exoplanet_cmplt_data  %>%  select(period, host_mass, host_temp, axis) %>% na.omit()
model_data <- log(model_data)
model_data
model_data <- exoplanet_cmplt_data  %>%  select(period, host_mass, host_temp, axis) %>% na.omit()
model_data <- log(model_data)
model_data$host_mass <- scale(model_data$host_mass)[,1]
model_data$host_temp <- scale(model_data$host_temp)[,1]
model_data$axis <- scale(model_data$axis)[,1]
model_data <- exoplanet_cmplt_data  %>%  select(period, host_mass, host_temp, axis) %>% na.omit()
scale(model_data)
scale(model_data)[1,]
scale(model_data)[,1]
model_data$host_mass <- scale(model_data$host_mass)[,1]
model_data$host_temp <- scale(model_data$host_temp)[,1]
model_data$axis <- scale(model_data$axis)[,1]
model_data$period <- scale(model_data$period)[,1]
model_data <- exoplanet_cmplt_data  %>%  select(period, host_mass, host_temp, axis) %>% na.omit()
model_data <- log(model_data)
model_data$host_mass <- scale(model_data$host_mass)[,1]
model_data$host_temp <- scale(model_data$host_temp)[,1]
model_data$axis <- scale(model_data$axis)[,1]
model_data$period <- scale(model_data$period)[,1]
x <-model_data %>% select(host_mass, host_temp, axis) %>% as.matrix()
exoplanet_data_lr = list(N = nrow(model_data),
K = 2,
x = x,
y = model_data$period)
stan_run_lr_ml = optimizing(stan_model_lr, data = exoplanet_data_lr)
exoplanet_data_lr = list(N = nrow(model_data),
K = 3,
x = x,
y = model_data$period)
stan_run_lr_ml = optimizing(stan_model_lr, data = exoplanet_data_lr)
stan_run_lr_ml
model_data <- exoplanet_cmplt_data  %>%  select(period, host_mass, host_temp, axis) %>% na.omit()
model_data <- log(model_data)
model_data <- log(model_data)
# model_data$host_mass <- scale(model_data$host_mass)[,1]
# model_data$host_temp <- scale(model_data$host_temp)[,1]
# model_data$axis <- scale(model_data$axis)[,1]
# model_data$period <- scale(model_data$period)[,1]
x <-model_data %>% select(host_mass, host_temp, axis) %>% as.matrix()
exoplanet_data_lr = list(N = nrow(model_data),
K = 3,
x = x,
y = model_data$period)
stan_run_lr_ml = optimizing(stan_model_lr, data = exoplanet_data_lr)
model_data <- exoplanet_cmplt_data  %>%  select(period, host_mass, host_temp, axis) %>% na.omit()
model_data <- log(model_data)
# model_data$host_mass <- scale(model_data$host_mass)[,1]
# model_data$host_temp <- scale(model_data$host_temp)[,1]
# model_data$axis <- scale(model_data$axis)[,1]
# model_data$period <- scale(model_data$period)[,1]
x <-model_data %>% select(host_mass, host_temp, axis) %>% as.matrix()
exoplanet_data_lr = list(N = nrow(model_data),
K = 3,
x = x,
y = model_data$period)
stan_run_lr_ml = optimizing(stan_model_lr, data = exoplanet_data_lr)
stan_run_lr_ml
View(data)
# Including libraries
library(readr)
library(magrittr)
library(dplyr)
library(ggplot2)
library(ggiraph)
library(viridis)
library(gganimate)
library(rstan)
# Setting seed to get an unchanged output
set.seed(18201381)
# Reading data using read_csv function
data = read_csv("exo_data.csv")
# Converting columns to approproate type
data <- data %>% mutate(year = as.integer(year), meth = as.factor(meth), flag = as.factor(flag))
# Reading data using read_csv function
data = read_csv("exo_data.csv")
# Converting columns to approproate type
data <- data %>% mutate(year = as.integer(year), meth = as.factor(meth), flag = as.factor(flag))
# Avoiding the exoplanet  with unknown method of discovery
exoplanet_data <- exoplanet_data %>% filter(!is.na(meth))
# Reading data using read_csv function
exoplanet_data = read_csv("exo_data.csv")
# Converting columns to approproate type as mentioned
data <- data %>% mutate(year = as.integer(year), meth = as.factor(meth), flag = as.factor(flag))
# Avoiding the exoplanet  with unknown method of discovery
exoplanet_data <- exoplanet_data %>% filter(!is.na(meth))
ggplot(exoplanet_data, aes(x=log(dist), fill=meth)) +
geom_histogram(alpha = 0.5, position="dodge", bins=15)
#
ggplot(exoplanet_data, aes(x=log(dist), fill=meth)) +
geom_histogram(alpha = 0.5, position="dodge", bins=15)
ggplot(exoplanet_data, aes(x=log(dist), fill=meth)) +
geom_histogram(alpha = 0.5, position="dodge")
ggplot(exoplanet_data, aes(x=log(dist), fill=meth)) +
geom_histogram(alpha = 0.5, position="dodge") +
labs(title="Histogram of Distance by method of discovery", x = "Distance") +
theme_bw()
ggplot(exoplanet_data, aes(x = log(dist),
y = log(mass), color = meth)) +
geom_point_interactive(aes(data_id = id,
tooltip = id, onclick = onclick)) +
facet_grid(. ~ meth, scales = 'free_x') +
labs(title="Distance vs Mass scatter plot", x = "Distance", y="Mass") +
theme_bw() +
theme(legend.position = 'None')
# Adding the additional column to dataset containig the url to route when clicked
# Url will be base url + id
exoplanet_data$onclick =  sprintf("window.open(\"%s%s\")",
"http://www.openexoplanetcatalogue.com/planet/",
as.character(exoplanet_data$id))
# Ploting log distance vs log mass scatterplot and adding interactive feature to it
# The plot is seperated based on the method of discovery
ggplot(exoplanet_data, aes(x = log(dist),
y = log(mass), color = meth)) +
geom_point_interactive(aes(data_id = id,
tooltip = id, onclick = onclick)) +
facet_grid(. ~ meth, scales = 'free_x') +
labs(title="Distance vs Mass scatter plot", x = "Distance", y="Mass") +
theme_bw() +
theme(legend.position = 'None')
gg_planet = ggplot(exoplanet_data, aes(x = log(dist),
y = log(mass), color = meth)) +
geom_point_interactive(aes(data_id = id,
tooltip = id, onclick = onclick)) +
facet_grid(. ~ meth, scales = 'free_x') +
labs(title="Distance vs Mass scatter plot", x = "Distance", y="Mass") +
theme_bw() +
theme(legend.position = 'None')
ggiraph(code = print(gg_planet))
ggplot(data=exo_planet_data_cluster, aes(x=log(period), y=log(earth_radius), color=type)) +
geom_point() +
theme_bw()
# Adding cluster as a column in dataset
exo_planet_data_cluster$type <- km_cl$cluster
# Converting to factor
exo_planet_data_cluster$type <- as.factor(exo_planet_data_cluster$type)
ggplot(data=exo_planet_data_cluster, aes(x=log(period), y=log(earth_radius), color=type)) +
geom_point() +
theme_bw()
y=log(earth_radius), color=type)) +
# Adding cluster as a column in dataset
exo_planet_data_cluster$type <- km_cl$cluster
# Converting to factor
exo_planet_data_cluster$type <- as.factor(exo_planet_data_cluster$type)
# Plotting the clustered data
ggplot(data=exo_planet_data_cluster,
aes(x=log(period), y=log(earth_radius), color=type)) +
geom_point() + labs(title="Clustering on Peroid and
Earth radius", x = "Period", y="Earth radius") +   # Adding labels
theme_bw()
# Adding an additional factor unknown to type column NA dataset created above
exo_planet_data_with_na$type <- 'unknown'
# Comparing with the plot given we can decide the
levels(exo_planet_data_cluster$type) <- c('hot_jupiters', 'rocky', 'others', 'cold_gas_giants')
ggplot(data=exo_planet_data_cluster, aes(x=log(period), y=log(earth_radius), color=type)) +
geom_point() +
stat_ellipse(geom = "polygon", alpha = 1/2, aes(fill = type)) +
theme_bw()
# Adding cluster as a column in dataset
exo_planet_data_cluster$type <- km_cl$cluster
# Converting to factor
exo_planet_data_cluster$type <- as.factor(exo_planet_data_cluster$type)
# Plotting the clustered data
ggplot(data=exo_planet_data_cluster,
aes(x=log(period), y=log(earth_radius), color=type)) +
geom_point() + labs(title="Clustering on Peroid and Earth radius",
x = "Period", y="Earth radius") +            # Adding labels
theme_bw()                                                        # Adding theme
# Adding an additional factor unknown to type column NA dataset created above
exo_planet_data_with_na$type <- 'unknown'
# Comparing with the plot given we can decide the
levels(exo_planet_data_cluster$type) <- c('hot_jupiters', 'rocky', 'others', 'cold_gas_giants')
ggplot(data=exo_planet_data_cluster, aes(x=log(period), y=log(earth_radius), color=type)) +
geom_point() +
stat_ellipse(geom = "polygon", alpha = 1/2, aes(fill = type)) +
theme_bw()
# Since we are setting the seed the levels will be in the same order
levels(exo_planet_data_cluster$type) <- c('hot_jupiters', 'rocky', 'others', 'cold_gas_giants')
# Cluster plot with labels
ggplot(data=exo_planet_data_cluster, aes(x=log(period), y=log(earth_radius), color=type)) +
geom_point() +                                                        # Adding points
stat_ellipse(geom = "polygon", alpha = 1/2, aes(fill = type)) +       # Drawing ellipse around clusters
labs(title="Clustering on Peroid and Earth radius",
x = "Period", y="Earth radius")             # Adding labels
theme_bw()                                                            # Adding theme
ggplot(
celestial_data,
aes(r_asc, decl)) +
geom_point() +                                                         # Adding points
labs(title="Celestial map",x="Right ascension", y = "Declination") +   # Adding labels
theme_bw()
# Binding the two dataset (data used for cluster and data with type unknown) to single one to avoid data loss
exoplanet_cmplt_data <- rbind(exo_planet_data_cluster, exo_planet_data_with_na)
# Histogram plot
ggplot(exoplanet_cmplt_data, aes(x=log(mass), fill=type)) +
geom_histogram(bins=15, colour='black') +                         # Histogram
labs(title="Histogram of mass by type", x = "Mass") +             # Adding labels
theme_bw()                                                        # Adding theme
# Voilin plot
ggplot(exoplanet_cmplt_data, aes(x=type, y=log(mass), fill=type)) +
geom_violin(trim=FALSE,  color="black")+
labs(title="Plot of mass by type",x="Type", y = "Mass")+          # Adding labels
theme_bw()                                                        # Adding theme
# Creating time series data
# Getting group by frequency
time_series_data = exoplanet_cmplt_data %>% group_by(meth, year) %>% summarise(Freq=n()) %>% na.omit()
# Finding cumulative frequency up to that year
time_series_data %<>% group_by(meth) %>% mutate(cum_freq = cumsum(Freq))
# Time series plot for exoplanet discovered till year
ggplot(
time_series_data,
aes(year, cum_freq, color=meth)) +
geom_line(size=1.5) +
labs(title = 'Times series plot for exoplanet discoverd',
x = 'Year', y = 'Frequency of exoplanet discovered till year') +               # Adding labels
transition_reveal(year) +                                                           # Time series line
theme_bw()                                                                          # Adding theme
# Using ggplot to plot histogram of log distance highlighted by nethod of discovery
ggplot(exoplanet_data, aes(x=log(dist), fill=meth)) +
geom_histogram(alpha = 0.5, position="dodge") +
labs(title="Histogram of distance by method of discovery", x = "Distance") +
theme_bw()
# Setting options and cores
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
# Creating model data
model_data <- exoplanet_cmplt_data  %>%  select(period, host_mass, host_temp, axis) %>% na.omit()
model_data <- log(model_data)
x <-model_data %>% select(host_mass, host_temp, axis) %>% as.matrix()
exoplanet_data_lr = list(N = nrow(model_data),
K = 3,
x = x,
y = model_data$period)
# Maximum likelihood version
stan_model_lr = stan_model('lin_reg.stan')
stan_run_lr_ml = optimizing(stan_model_lr, data = exoplanet_data_lr)
print(stan_run_lr_ml)
# Setting options and cores
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
# Creating model data
model_data <- exoplanet_cmplt_data  %>%  select(period, host_mass, host_temp, axis) %>% na.omit()
model_data <- log(model_data)
x <-model_data %>% select(host_mass, host_temp, axis) %>% as.matrix()
exoplanet_data_lr = list(N = nrow(model_data),
K = 3,
x = x,
y = model_data$period)
# Maximum likelihood version
stan_model_lr = stan_model('lin_reg.stan')
stan_run_lr_ml = optimizing(stan_model_lr, data = exoplanet_data_lr)
print(stan_run_lr_ml)
stan_model_bin_reg_1 = stan_model('samp.stan')
stan_run_bin_reg_1 = sampling(stan_model_bin_reg_1, data = exoplanet_data_lr)
print(stan_run_bin_reg_1)
print(stan_run_lr_ml)
print(stan_run_bin_reg_1)
plot(stan_run_bin_reg_1, par = c("alpha", "beta"))
plot(stan_run_bin_reg_1, par = c("alpha"))
plot(stan_run_bin_reg_1, par = c("beta"))
plot(stan_run_bin_reg_1, par = c("beta[1]"))
runApp('exoplanet_shiny')
# Binding the two dataset (data used for cluster and data with type unknown) to single one to avoid data loss
exoplanet_cmplt_data <- rbind(exo_planet_data_cluster, exo_planet_data_with_na)
# Histogram plot
ggplot(exoplanet_cmplt_data, aes(x=log(mass), fill=type)) +
geom_histogram(colour='black') +                         # Histogram
labs(title="Histogram of mass by type", x = "Mass") +             # Adding labels
theme_bw()                                                        # Adding theme
# Voilin plot
ggplot(exoplanet_cmplt_data, aes(x=type, y=log(mass), fill=type)) +
geom_violin(trim=FALSE,  color="black")+
labs(title="Voilin plot of mass by type",x="Type", y = "Mass")+   # Adding labels
theme_bw()                                                        # Adding theme
runApp('exoplanet_shiny')
ggplot(
time_series_data,
aes(year, cum_freq, color=meth)) +
geom_line(size=1.5) +
labs(title = 'Times series plot for exoplanet discoverd',
x = 'Year', y = 'Frequency of exoplanet discovered till year') +               # Adding labels
facet_grid(. ~ meth, scales = 'free') +
transition_reveal(year) +                                                           # Time series line
theme_bw()
ggplot(
time_series_data,
aes(year, cum_freq, color=meth)) +
geom_line(size=1.5) +
labs(title = 'Times series plot for exoplanet discoverd',
x = 'Year', y = 'Frequency of exoplanet discovered till year') +               # Adding labels
facet_wrap meth, scales = 'free') +
transition_reveal(year) +                                                           # Time series line
theme_bw()
ggplot(
time_series_data,
aes(year, cum_freq, color=meth)) +
geom_line(size=1.5) +
labs(title = 'Times series plot for exoplanet discoverd',
x = 'Year', y = 'Frequency of exoplanet discovered till year') +               # Adding labels
facet_wrap ~ meth, scales = 'free') +
transition_reveal(year) +                                                           # Time series line
theme_bw()
ggplot(
time_series_data,
aes(year, cum_freq, color=meth)) +
geom_line(size=1.5) +
labs(title = 'Times series plot for exoplanet discoverd',
x = 'Year', y = 'Frequency of exoplanet discovered till year') +               # Adding labels
facet_wrap (~ meth, scales = 'free') +
transition_reveal(year) +                                                           # Time series line
theme_bw()
# Creating time series data
# Getting group by frequency
time_series_data = exoplanet_cmplt_data %>% group_by(meth, year) %>% summarise(Freq=n()) %>% na.omit()
# Finding cumulative frequency up to that year
time_series_data %<>% group_by(meth) %>% mutate(cum_freq = cumsum(Freq))
# Time series plot for exoplanet discovered till year
ggplot(
time_series_data,
aes(year, cum_freq, color=meth)) +
geom_line() +
labs(title = 'Times series plot for exoplanet discoverd',
x = 'Year', y = 'Frequency of exoplanet discovered till year') +               # Adding labels
facet_wrap (~ meth, scales = 'free') +
transition_reveal(year) +                                                           # Time series line
theme_bw()                                                                          # Adding theme
# Creating time series data
# Getting group by frequency
time_series_data = exoplanet_cmplt_data %>% group_by(meth, year) %>% summarise(Freq=n()) %>% na.omit()
# Finding cumulative frequency up to that year
time_series_data %<>% group_by(meth) %>% mutate(cum_freq = cumsum(Freq))
# Time series plot for exoplanet discovered till year
ggplot(
time_series_data,
aes(year, cum_freq, color=meth)) +
geom_line() +
labs(title = 'Times series plot for exoplanet discoverd',
x = 'Year', y = 'Frequency of exoplanet discovered till year') +               # Adding labels
facet_wrap (~ meth, scales = 'free') +
transition_reveal(year) +                                                           # Time series line
theme_bw()                                                                          # Adding theme
# Creating time series data
# Getting group by frequency
time_series_data = exoplanet_cmplt_data %>% group_by(meth, year) %>% summarise(Freq=n()) %>% na.omit()
# Finding cumulative frequency up to that year
time_series_data %<>% group_by(meth) %>% mutate(cum_freq = cumsum(Freq))
# Time series plot for exoplanet discovered till year
ggplot(
time_series_data,
aes(year, cum_freq, color=meth)) +
geom_line() +
labs(title = 'Times series plot for exoplanet discoverd',
x = 'Year', y = 'Frequency of exoplanet discovered till year') +               # Adding labels
facet_wrap (~ meth, scales = 'free') +
transition_reveal(year) +                                                           # Time series line
theme_bw() +                                                                        # Adding theme
theme(legend.position = 'None')                                                     # Removing labels
plot(stan_run_sampling)
standns(stan_run_sampling)
traceplot(stan_run_sampling)
stan_run_sampling = sampling(stan_model_sampling, data = exoplanet_data_lr)
# Sampling version
# Updated stan model
stan_model_sampling = stan_model('sampling_reg.stan')
stan_run_sampling = sampling(stan_model_sampling, data = exoplanet_data_lr)
plot(stan_run_sampling)
standns(stan_run_sampling)
traceplot(stan_run_sampling)
standens(stan_run_sampling)
stan_dens(stan_run_sampling)
# Plot for parameters
plot(stan_run_sampling)
View(time_series_data)
# Plot for parameters
plot(stan_run_sampling, main="Parameter Plot")
# Density plot
stan_dens(stan_run_sampling, main="Density Plot")
# Trace plot
traceplot(stan_run_sampling, main="Trace Plot")
# Plot for parameters
plot(stan_run_sampling, main="Parameter Plot")
# Density plot
stan_dens(stan_run_sampling, main="Density Plot")
# Trace plot
traceplot(stan_run_sampling, main="Trace Plot")
# Plot for parameters
plot(stan_run_sampling, main="Parameter Plot")
# Density plot
stan_dens(stan_run_sampling, main="Density Plot")
# Trace plot
traceplot(stan_run_sampling, main="Trace Plot")
# Plot for parameters
plot(stan_run_sampling, title="Parameter Plot")
# Density plot
stan_dens(stan_run_sampling, main="Density Plot")
# Trace plot
traceplot(stan_run_sampling, main="Trace Plot")
setwd("D:\Study\R\AdvancedR\Project\18201381_SibiSimon")
setwd("D:/Study/R/AdvancedR/Project/18201381_SibiSimon")
